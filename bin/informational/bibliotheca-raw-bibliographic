#!/usr/bin/env python
from nose.tools import set_trace
import json
import os
import sys
from xml.dom import minidom
bin_dir = os.path.split(__file__)[0]
package_dir = os.path.join(bin_dir, "..", "..")
sys.path.append(os.path.abspath(package_dir))

from core.model import (
    Collection,
    ExternalIntegration,
)
from core.scripts import IdentifierInputScript
from api.bibliotheca import BibliothecaAPI

class BibliothecaRawBibliographicScript(IdentifierInputScript):
    def run(self):
        args = self.parse_command_line(self._db)
        for collection in Collection.by_protocol(
            self._db, ExternalIntegration.BIBLIOTHECA
        ):
            api = BibliothecaAPI(self._db, collection)
            for identifier in args.identifiers:
                data = api.bibliographic_lookup_request(identifier)
                xml = minidom.parseString(data)
                print xml.toprettyxml()
                print

BibliothecaRawBibliographicScript().run()
